<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
	<properties>
		<title>
			R-OSGi - transparent OSGi remote extension for distributed
			services - Network Channels
		</title>
		<author email="rellermeyer_AT_inf.ethz.ch">
			Jan S. Rellermeyer
		</author>
	</properties>
	<meta name="keyword"
		content="Projects, using, OSGi, R-OSGi, rosgi, remote, remoting, Java, J2ME, embedded systems, Event, Service, EventAdmin, Remote Event, RemoteEvent, SLP, Remote services, service discovery" />
	<meta name="description"
		content="The Lego mindstorm robots are controlled by R-OSGi, the OSGi remote service framework based on jSLP, the pure java slp implementation." />
	<meta http-equiv="cache-control" content="no-cache" />
	<meta http-equiv="pragma" content="no-cache" />
	<meta http-equiv="robots" content="index, follow" />
	<body>
		<section name="Network Channels">
			<p>
				By default, R-OSGi uses its own lightweight binary
				protocol over persistent TCP connections. In R-OSGi,
				connections are made through the abstraction of
				<code>NetworkChannels</code>
				. The set of supported channel types can be extended by
				registering additional
				<code>NetworkChannelFactories</code>
				for specific transports.
			</p>
			<p>
				Two examples of alternative transports are the Mina and
				the Bluetooth transports. The Mina NetworkChannelFactory
				operates with the same protocol as standard R-OSGi but
				over
				<a href="http://mina.apache.org">Mina</a>
				high performance connections. The Bluetooth
				NetworkChannelFactory implements both the transport and
				the service discovery over the Bluetooth RFCOMM layer.
			</p>
		</section>
	</body>
</document>